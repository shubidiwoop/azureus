/**
 * @fileoverview gRPC-Web generated client stub for space
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
import * as grpcWeb from 'grpc-web';
import { AddItemsResponse, BackupKeysByPassphraseResponse, ConfigInfoResponse, CreateBucketResponse, CreateFolderResponse, CreateUsernameAndEmailResponse, FileEventResponse, FuseDriveResponse, GenerateFileShareLinkResponse, GenerateKeyPairResponse, GetIdentityByUsernameResponse, JoinBucketResponse, ListBucketsResponse, ListDirectoriesResponse, ListDirectoryResponse, OpenFileResponse, RecoverKeysByPassphraseResponse, ShareBucketResponse, ShareBucketViaEmailResponse, ShareBucketViaIdentityResponse, TextileEventResponse } from './space_pb';
var SpaceApiClient = /** @class */ (function () {
    function SpaceApiClient(hostname, credentials, options) {
        this.methodInfoListDirectories = new grpcWeb.AbstractClientBase.MethodInfo(ListDirectoriesResponse, function (request) {
            return request.serializeBinary();
        }, ListDirectoriesResponse.deserializeBinary);
        this.methodInfoListDirectory = new grpcWeb.AbstractClientBase.MethodInfo(ListDirectoryResponse, function (request) {
            return request.serializeBinary();
        }, ListDirectoryResponse.deserializeBinary);
        this.methodInfoGetConfigInfo = new grpcWeb.AbstractClientBase.MethodInfo(ConfigInfoResponse, function (request) {
            return request.serializeBinary();
        }, ConfigInfoResponse.deserializeBinary);
        this.methodInfoGenerateKeyPair = new grpcWeb.AbstractClientBase.MethodInfo(GenerateKeyPairResponse, function (request) {
            return request.serializeBinary();
        }, GenerateKeyPairResponse.deserializeBinary);
        this.methodInfoGenerateKeyPairWithForce = new grpcWeb.AbstractClientBase.MethodInfo(GenerateKeyPairResponse, function (request) {
            return request.serializeBinary();
        }, GenerateKeyPairResponse.deserializeBinary);
        this.methodInfoSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(FileEventResponse, function (request) {
            return request.serializeBinary();
        }, FileEventResponse.deserializeBinary);
        this.methodInfoTxlSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(TextileEventResponse, function (request) {
            return request.serializeBinary();
        }, TextileEventResponse.deserializeBinary);
        this.methodInfoOpenFile = new grpcWeb.AbstractClientBase.MethodInfo(OpenFileResponse, function (request) {
            return request.serializeBinary();
        }, OpenFileResponse.deserializeBinary);
        this.methodInfoAddItems = new grpcWeb.AbstractClientBase.MethodInfo(AddItemsResponse, function (request) {
            return request.serializeBinary();
        }, AddItemsResponse.deserializeBinary);
        this.methodInfoCreateFolder = new grpcWeb.AbstractClientBase.MethodInfo(CreateFolderResponse, function (request) {
            return request.serializeBinary();
        }, CreateFolderResponse.deserializeBinary);
        this.methodInfoToggleFuseDrive = new grpcWeb.AbstractClientBase.MethodInfo(FuseDriveResponse, function (request) {
            return request.serializeBinary();
        }, FuseDriveResponse.deserializeBinary);
        this.methodInfoGetFuseDriveStatus = new grpcWeb.AbstractClientBase.MethodInfo(FuseDriveResponse, function (request) {
            return request.serializeBinary();
        }, FuseDriveResponse.deserializeBinary);
        this.methodInfoCreateBucket = new grpcWeb.AbstractClientBase.MethodInfo(CreateBucketResponse, function (request) {
            return request.serializeBinary();
        }, CreateBucketResponse.deserializeBinary);
        this.methodInfoGetIdentityByUsername = new grpcWeb.AbstractClientBase.MethodInfo(GetIdentityByUsernameResponse, function (request) {
            return request.serializeBinary();
        }, GetIdentityByUsernameResponse.deserializeBinary);
        this.methodInfoCreateUsernameAndEmail = new grpcWeb.AbstractClientBase.MethodInfo(CreateUsernameAndEmailResponse, function (request) {
            return request.serializeBinary();
        }, CreateUsernameAndEmailResponse.deserializeBinary);
        this.methodInfoBackupKeysByPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(BackupKeysByPassphraseResponse, function (request) {
            return request.serializeBinary();
        }, BackupKeysByPassphraseResponse.deserializeBinary);
        this.methodInfoRecoverKeysByPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(RecoverKeysByPassphraseResponse, function (request) {
            return request.serializeBinary();
        }, RecoverKeysByPassphraseResponse.deserializeBinary);
        this.methodInfoShareBucket = new grpcWeb.AbstractClientBase.MethodInfo(ShareBucketResponse, function (request) {
            return request.serializeBinary();
        }, ShareBucketResponse.deserializeBinary);
        this.methodInfoJoinBucket = new grpcWeb.AbstractClientBase.MethodInfo(JoinBucketResponse, function (request) {
            return request.serializeBinary();
        }, JoinBucketResponse.deserializeBinary);
        this.methodInfoShareBucketViaEmail = new grpcWeb.AbstractClientBase.MethodInfo(ShareBucketViaEmailResponse, function (request) {
            return request.serializeBinary();
        }, ShareBucketViaEmailResponse.deserializeBinary);
        this.methodInfoShareBucketViaIdentity = new grpcWeb.AbstractClientBase.MethodInfo(ShareBucketViaIdentityResponse, function (request) {
            return request.serializeBinary();
        }, ShareBucketViaIdentityResponse.deserializeBinary);
        this.methodInfoGenerateFileShareLink = new grpcWeb.AbstractClientBase.MethodInfo(GenerateFileShareLinkResponse, function (request) {
            return request.serializeBinary();
        }, GenerateFileShareLinkResponse.deserializeBinary);
        this.methodInfoListBuckets = new grpcWeb.AbstractClientBase.MethodInfo(ListBucketsResponse, function (request) {
            return request.serializeBinary();
        }, ListBucketsResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    SpaceApiClient.prototype.listDirectories = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListDirectories', this.hostname_).toString(), request, metadata || {}, this.methodInfoListDirectories, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListDirectories', request, metadata || {}, this.methodInfoListDirectories);
    };
    SpaceApiClient.prototype.listDirectory = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListDirectory', this.hostname_).toString(), request, metadata || {}, this.methodInfoListDirectory, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListDirectory', request, metadata || {}, this.methodInfoListDirectory);
    };
    SpaceApiClient.prototype.getConfigInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetConfigInfo', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetConfigInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetConfigInfo', request, metadata || {}, this.methodInfoGetConfigInfo);
    };
    SpaceApiClient.prototype.generateKeyPair = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateKeyPair', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateKeyPair, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateKeyPair', request, metadata || {}, this.methodInfoGenerateKeyPair);
    };
    SpaceApiClient.prototype.generateKeyPairWithForce = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateKeyPairWithForce', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateKeyPairWithForce, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateKeyPairWithForce', request, metadata || {}, this.methodInfoGenerateKeyPairWithForce);
    };
    SpaceApiClient.prototype.subscribe = function (request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/Subscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoSubscribe);
    };
    SpaceApiClient.prototype.txlSubscribe = function (request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/TxlSubscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoTxlSubscribe);
    };
    SpaceApiClient.prototype.openFile = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/OpenFile', this.hostname_).toString(), request, metadata || {}, this.methodInfoOpenFile, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/OpenFile', request, metadata || {}, this.methodInfoOpenFile);
    };
    SpaceApiClient.prototype.addItems = function (request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/AddItems', this.hostname_).toString(), request, metadata || {}, this.methodInfoAddItems);
    };
    SpaceApiClient.prototype.createFolder = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateFolder', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateFolder, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateFolder', request, metadata || {}, this.methodInfoCreateFolder);
    };
    SpaceApiClient.prototype.toggleFuseDrive = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ToggleFuseDrive', this.hostname_).toString(), request, metadata || {}, this.methodInfoToggleFuseDrive, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ToggleFuseDrive', request, metadata || {}, this.methodInfoToggleFuseDrive);
    };
    SpaceApiClient.prototype.getFuseDriveStatus = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetFuseDriveStatus', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetFuseDriveStatus, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetFuseDriveStatus', request, metadata || {}, this.methodInfoGetFuseDriveStatus);
    };
    SpaceApiClient.prototype.createBucket = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateBucket', request, metadata || {}, this.methodInfoCreateBucket);
    };
    SpaceApiClient.prototype.getIdentityByUsername = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetIdentityByUsername', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetIdentityByUsername, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetIdentityByUsername', request, metadata || {}, this.methodInfoGetIdentityByUsername);
    };
    SpaceApiClient.prototype.createUsernameAndEmail = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateUsernameAndEmail', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateUsernameAndEmail, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateUsernameAndEmail', request, metadata || {}, this.methodInfoCreateUsernameAndEmail);
    };
    SpaceApiClient.prototype.backupKeysByPassphrase = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/BackupKeysByPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoBackupKeysByPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/BackupKeysByPassphrase', request, metadata || {}, this.methodInfoBackupKeysByPassphrase);
    };
    SpaceApiClient.prototype.recoverKeysByPassphrase = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/RecoverKeysByPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoRecoverKeysByPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/RecoverKeysByPassphrase', request, metadata || {}, this.methodInfoRecoverKeysByPassphrase);
    };
    SpaceApiClient.prototype.shareBucket = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareBucket', request, metadata || {}, this.methodInfoShareBucket);
    };
    SpaceApiClient.prototype.joinBucket = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/JoinBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoJoinBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/JoinBucket', request, metadata || {}, this.methodInfoJoinBucket);
    };
    SpaceApiClient.prototype.shareBucketViaEmail = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareBucketViaEmail', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareBucketViaEmail, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareBucketViaEmail', request, metadata || {}, this.methodInfoShareBucketViaEmail);
    };
    SpaceApiClient.prototype.shareBucketViaIdentity = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareBucketViaIdentity', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareBucketViaIdentity, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareBucketViaIdentity', request, metadata || {}, this.methodInfoShareBucketViaIdentity);
    };
    SpaceApiClient.prototype.generateFileShareLink = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateFileShareLink', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateFileShareLink, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateFileShareLink', request, metadata || {}, this.methodInfoGenerateFileShareLink);
    };
    SpaceApiClient.prototype.listBuckets = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListBuckets', this.hostname_).toString(), request, metadata || {}, this.methodInfoListBuckets, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListBuckets', request, metadata || {}, this.methodInfoListBuckets);
    };
    return SpaceApiClient;
}());
export { SpaceApiClient };
//# sourceMappingURL=SpaceServiceClientPb.js.map