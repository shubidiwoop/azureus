"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for space
 * @enhanceable
 * @public
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpaceApiClient = void 0;
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
const grpcWeb = __importStar(require("grpc-web"));
const space_pb_1 = require("./space_pb");
class SpaceApiClient {
    constructor(hostname, credentials, options) {
        this.methodInfoListDirectories = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ListDirectoriesResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ListDirectoriesResponse.deserializeBinary);
        this.methodInfoListDirectory = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ListDirectoryResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ListDirectoryResponse.deserializeBinary);
        this.methodInfoGetConfigInfo = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ConfigInfoResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ConfigInfoResponse.deserializeBinary);
        this.methodInfoGenerateKeyPair = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GenerateKeyPairResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GenerateKeyPairResponse.deserializeBinary);
        this.methodInfoGenerateKeyPairWithForce = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GenerateKeyPairResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GenerateKeyPairResponse.deserializeBinary);
        this.methodInfoSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.FileEventResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.FileEventResponse.deserializeBinary);
        this.methodInfoTxlSubscribe = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.TextileEventResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.TextileEventResponse.deserializeBinary);
        this.methodInfoOpenFile = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.OpenFileResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.OpenFileResponse.deserializeBinary);
        this.methodInfoAddItems = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.AddItemsResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.AddItemsResponse.deserializeBinary);
        this.methodInfoCreateFolder = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.CreateFolderResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.CreateFolderResponse.deserializeBinary);
        this.methodInfoToggleFuseDrive = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.FuseDriveResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.FuseDriveResponse.deserializeBinary);
        this.methodInfoGetFuseDriveStatus = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.FuseDriveResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.FuseDriveResponse.deserializeBinary);
        this.methodInfoCreateBucket = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.CreateBucketResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.CreateBucketResponse.deserializeBinary);
        this.methodInfoGetIdentityByUsername = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GetIdentityByUsernameResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GetIdentityByUsernameResponse.deserializeBinary);
        this.methodInfoCreateUsernameAndEmail = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.CreateUsernameAndEmailResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.CreateUsernameAndEmailResponse.deserializeBinary);
        this.methodInfoBackupKeysByPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.BackupKeysByPassphraseResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.BackupKeysByPassphraseResponse.deserializeBinary);
        this.methodInfoRecoverKeysByPassphrase = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.RecoverKeysByPassphraseResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.RecoverKeysByPassphraseResponse.deserializeBinary);
        this.methodInfoShareBucket = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ShareBucketResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ShareBucketResponse.deserializeBinary);
        this.methodInfoJoinBucket = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.JoinBucketResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.JoinBucketResponse.deserializeBinary);
        this.methodInfoShareBucketViaEmail = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ShareBucketViaEmailResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ShareBucketViaEmailResponse.deserializeBinary);
        this.methodInfoShareBucketViaIdentity = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ShareBucketViaIdentityResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ShareBucketViaIdentityResponse.deserializeBinary);
        this.methodInfoGenerateFileShareLink = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.GenerateFileShareLinkResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.GenerateFileShareLinkResponse.deserializeBinary);
        this.methodInfoListBuckets = new grpcWeb.AbstractClientBase.MethodInfo(space_pb_1.ListBucketsResponse, (request) => {
            return request.serializeBinary();
        }, space_pb_1.ListBucketsResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    listDirectories(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListDirectories', this.hostname_).toString(), request, metadata || {}, this.methodInfoListDirectories, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListDirectories', request, metadata || {}, this.methodInfoListDirectories);
    }
    listDirectory(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListDirectory', this.hostname_).toString(), request, metadata || {}, this.methodInfoListDirectory, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListDirectory', request, metadata || {}, this.methodInfoListDirectory);
    }
    getConfigInfo(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetConfigInfo', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetConfigInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetConfigInfo', request, metadata || {}, this.methodInfoGetConfigInfo);
    }
    generateKeyPair(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateKeyPair', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateKeyPair, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateKeyPair', request, metadata || {}, this.methodInfoGenerateKeyPair);
    }
    generateKeyPairWithForce(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateKeyPairWithForce', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateKeyPairWithForce, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateKeyPairWithForce', request, metadata || {}, this.methodInfoGenerateKeyPairWithForce);
    }
    subscribe(request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/Subscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoSubscribe);
    }
    txlSubscribe(request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/TxlSubscribe', this.hostname_).toString(), request, metadata || {}, this.methodInfoTxlSubscribe);
    }
    openFile(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/OpenFile', this.hostname_).toString(), request, metadata || {}, this.methodInfoOpenFile, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/OpenFile', request, metadata || {}, this.methodInfoOpenFile);
    }
    addItems(request, metadata) {
        return this.client_.serverStreaming(new URL('/space.SpaceApi/AddItems', this.hostname_).toString(), request, metadata || {}, this.methodInfoAddItems);
    }
    createFolder(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateFolder', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateFolder, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateFolder', request, metadata || {}, this.methodInfoCreateFolder);
    }
    toggleFuseDrive(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ToggleFuseDrive', this.hostname_).toString(), request, metadata || {}, this.methodInfoToggleFuseDrive, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ToggleFuseDrive', request, metadata || {}, this.methodInfoToggleFuseDrive);
    }
    getFuseDriveStatus(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetFuseDriveStatus', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetFuseDriveStatus, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetFuseDriveStatus', request, metadata || {}, this.methodInfoGetFuseDriveStatus);
    }
    createBucket(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateBucket', request, metadata || {}, this.methodInfoCreateBucket);
    }
    getIdentityByUsername(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GetIdentityByUsername', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetIdentityByUsername, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GetIdentityByUsername', request, metadata || {}, this.methodInfoGetIdentityByUsername);
    }
    createUsernameAndEmail(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/CreateUsernameAndEmail', this.hostname_).toString(), request, metadata || {}, this.methodInfoCreateUsernameAndEmail, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/CreateUsernameAndEmail', request, metadata || {}, this.methodInfoCreateUsernameAndEmail);
    }
    backupKeysByPassphrase(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/BackupKeysByPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoBackupKeysByPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/BackupKeysByPassphrase', request, metadata || {}, this.methodInfoBackupKeysByPassphrase);
    }
    recoverKeysByPassphrase(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/RecoverKeysByPassphrase', this.hostname_).toString(), request, metadata || {}, this.methodInfoRecoverKeysByPassphrase, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/RecoverKeysByPassphrase', request, metadata || {}, this.methodInfoRecoverKeysByPassphrase);
    }
    shareBucket(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareBucket', request, metadata || {}, this.methodInfoShareBucket);
    }
    joinBucket(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/JoinBucket', this.hostname_).toString(), request, metadata || {}, this.methodInfoJoinBucket, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/JoinBucket', request, metadata || {}, this.methodInfoJoinBucket);
    }
    shareBucketViaEmail(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareBucketViaEmail', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareBucketViaEmail, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareBucketViaEmail', request, metadata || {}, this.methodInfoShareBucketViaEmail);
    }
    shareBucketViaIdentity(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ShareBucketViaIdentity', this.hostname_).toString(), request, metadata || {}, this.methodInfoShareBucketViaIdentity, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ShareBucketViaIdentity', request, metadata || {}, this.methodInfoShareBucketViaIdentity);
    }
    generateFileShareLink(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/GenerateFileShareLink', this.hostname_).toString(), request, metadata || {}, this.methodInfoGenerateFileShareLink, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/GenerateFileShareLink', request, metadata || {}, this.methodInfoGenerateFileShareLink);
    }
    listBuckets(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/space.SpaceApi/ListBuckets', this.hostname_).toString(), request, metadata || {}, this.methodInfoListBuckets, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/space.SpaceApi/ListBuckets', request, metadata || {}, this.methodInfoListBuckets);
    }
}
exports.SpaceApiClient = SpaceApiClient;
//# sourceMappingURL=SpaceServiceClientPb.js.map